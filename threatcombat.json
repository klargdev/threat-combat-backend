{
    "openapi": "3.0.1",
    "info": {
      "title": "Threat Combat Backend API",
      "version": "1.0.0",
      "description": "API documentation for the Threat Combat Backend"
    },
    "servers": [
      {
        "url": "http://localhost:5000"
      }
    ],
    "paths": {
      "/api/auth/register": {
        "post": {
          "summary": "Register a new user",
          "description": "Register a new user with name, email, and password.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "email",
                    "password"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The user's name."
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email."
                    },
                    "password": {
                      "type": "string",
                      "description": "The user's password."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully."
            },
            "400": {
              "description": "Bad request or user already exists."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/auth/login": {
        "post": {
          "summary": "Log in a user",
          "description": "Authenticate a user and return a JWT token.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "The user's email."
                    },
                    "password": {
                      "type": "string",
                      "description": "The user's password."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful, returns a JWT token."
            },
            "400": {
              "description": "Invalid credentials or validation errors."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/events": {
        "post": {
          "summary": "Create a new event",
          "description": "Create a new event. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "title",
                    "description",
                    "date",
                    "location"
                  ],
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the event."
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the event."
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time of the event."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the event."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Event created successfully."
            },
            "400": {
              "description": "Bad request."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "get": {
          "summary": "Retrieve all events",
          "description": "Get a list of all events.",
          "responses": {
            "200": {
              "description": "A list of events."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/events/{id}": {
        "get": {
          "summary": "Retrieve an event by ID",
          "description": "Get event details by event ID.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The event ID."
            }
          ],
          "responses": {
            "200": {
              "description": "Event details retrieved successfully."
            },
            "404": {
              "description": "Event not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "put": {
          "summary": "Update an event by ID",
          "description": "Update event details by event ID. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The event ID."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Event updated successfully."
            },
            "404": {
              "description": "Event not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "delete": {
          "summary": "Delete an event by ID",
          "description": "Delete an event by event ID. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The event ID."
            }
          ],
          "responses": {
            "200": {
              "description": "Event deleted successfully."
            },
            "404": {
              "description": "Event not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/notifications": {
        "post": {
          "summary": "Send a notification",
          "description": "Create and send a notification to a specific user. Authentication is required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "user",
                    "message"
                  ],
                  "properties": {
                    "user": {
                      "type": "string",
                      "description": "The ID of the user to receive the notification."
                    },
                    "message": {
                      "type": "string",
                      "description": "The notification message."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Notification sent successfully."
            },
            "400": {
              "description": "Bad request."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "get": {
          "summary": "Retrieve notifications",
          "description": "Get a list of notifications for the authenticated user.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "A list of notifications."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/notifications/{id}/read": {
        "put": {
          "summary": "Mark notification as read",
          "description": "Mark a specific notification as read. Authentication is required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The notification ID."
            }
          ],
          "responses": {
            "200": {
              "description": "Notification marked as read successfully."
            },
            "404": {
              "description": "Notification not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/projects": {
        "post": {
          "summary": "Create a new project",
          "description": "Create a new project. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "description"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the project."
                    },
                    "description": {
                      "type": "string",
                      "description": "The project description."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ongoing",
                        "completed"
                      ],
                      "description": "The current status of the project."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Project created successfully."
            },
            "400": {
              "description": "Bad request."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "get": {
          "summary": "Retrieve all projects",
          "description": "Get a list of all projects.",
          "responses": {
            "200": {
              "description": "A list of projects."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/projects/{id}": {
        "get": {
          "summary": "Retrieve a single project",
          "description": "Get project details by project ID.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The project ID."
            }
          ],
          "responses": {
            "200": {
              "description": "Project details retrieved successfully."
            },
            "404": {
              "description": "Project not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "put": {
          "summary": "Update a project",
          "description": "Update project details by project ID. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The project ID."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ongoing",
                        "completed"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Project updated successfully."
            },
            "404": {
              "description": "Project not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "delete": {
          "summary": "Delete a project",
          "description": "Delete a project by project ID. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The project ID."
            }
          ],
          "responses": {
            "200": {
              "description": "Project deleted successfully."
            },
            "404": {
              "description": "Project not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/research": {
        "post": {
          "summary": "Create a new research entry",
          "description": "Create a new research entry. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "title",
                    "abstract",
                    "content"
                  ],
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the research."
                    },
                    "abstract": {
                      "type": "string",
                      "description": "A summary of the research."
                    },
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of author IDs."
                    },
                    "publishedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The publication date of the research."
                    },
                    "content": {
                      "type": "string",
                      "description": "Detailed content of the research."
                    },
                    "references": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of references."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "published"
                      ],
                      "description": "The current status of the research."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Research created successfully."
            },
            "400": {
              "description": "Bad request."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "get": {
          "summary": "Retrieve all research entries",
          "description": "Get a list of all research entries.",
          "responses": {
            "200": {
              "description": "A list of research entries."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/research/{id}": {
        "get": {
          "summary": "Retrieve a specific research entry",
          "description": "Get details of a research entry by its ID.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The ID of the research entry."
            }
          ],
          "responses": {
            "200": {
              "description": "Research entry details retrieved successfully."
            },
            "404": {
              "description": "Research entry not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "put": {
          "summary": "Update a research entry",
          "description": "Update details of a research entry by its ID. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The ID of the research entry."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "abstract": {
                      "type": "string"
                    },
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publishedDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "content": {
                      "type": "string"
                    },
                    "references": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "published"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Research entry updated successfully."
            },
            "404": {
              "description": "Research entry not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "delete": {
          "summary": "Delete a research entry",
          "description": "Delete a research entry by its ID. Authentication required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The ID of the research entry."
            }
          ],
          "responses": {
            "200": {
              "description": "Research entry deleted successfully."
            },
            "404": {
              "description": "Research entry not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/users": {
        "get": {
          "summary": "Retrieve all users",
          "description": "Retrieve a list of all users. Authentication is required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "A list of users retrieved successfully."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      },
      "/api/users/{id}": {
        "get": {
          "summary": "Retrieve a single user",
          "description": "Get user details by user ID. Authentication is required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The ID of the user."
            }
          ],
          "responses": {
            "200": {
              "description": "User details retrieved successfully."
            },
            "404": {
              "description": "User not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "put": {
          "summary": "Update a user",
          "description": "Update user information by user ID. Authentication is required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The ID of the user to update."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The updated name of the user."
                    },
                    "email": {
                      "type": "string",
                      "description": "The updated email of the user."
                    }
                  },
                  "example": {
                    "name": "Jane Doe",
                    "email": "jane.doe@example.com"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully."
            },
            "404": {
              "description": "User not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        },
        "delete": {
          "summary": "Delete a user",
          "description": "Delete a user by user ID. Authentication is required.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The ID of the user to delete."
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully."
            },
            "404": {
              "description": "User not found."
            },
            "500": {
              "description": "Server error."
            }
          }
        }
      }
    },
    "components": {
  
    },
    "tags": []
  }